{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_FOOD, ADD_GOALS, ERROR, EXERCISE_ADDED, EXERCISE_LOAD_SUCCESS, LOADING, LOAD_FOOD, LOAD_GOALS, REMOVE_EXERCISE, REMOVE_FOOD, REMOVE_GOAL } from \"../components\";\nconst baseURL = process.env.REACT_APP_BASE_URL || \"https://habit-tracker-backend-kappa.vercel.app/v1/api\";\nexport const fetchData = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.get(`${baseURL}/exercises/exercises`);\n    if (response.data.success) {\n      dispatch({\n        type: EXERCISE_LOAD_SUCCESS,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\nexport const addExercise = newExercise => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.post(`${baseURL}/exercises/add-exercise`, {\n      ...newExercise\n    });\n    if (response.data.success) {\n      dispatch({\n        type: EXERCISE_ADDED,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\nexport const removeExercise = exerciseId => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.delete(`${baseURL}/exercises/${exerciseId}`);\n    if (response.status === 204) {\n      dispatch({\n        type: REMOVE_EXERCISE,\n        payload: exerciseId\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\n\n// food actions\n\nexport const addFood = newFood => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.post(`${baseURL}/foods/add-food`, {\n      ...newFood\n    });\n    dispatch({\n      type: ADD_FOOD,\n      payload: response.data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\nexport const fetchGoals = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.get(`${baseURL}/goals`);\n    if (response.data.success) {\n      dispatch({\n        type: LOAD_GOALS,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\nexport const removeGoals = goalId => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.delete(`${baseURL}/goals/${goalId}`);\n    if (response.status === 204) {\n      dispatch({\n        type: REMOVE_GOAL,\n        payload: goalId\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\n\n// goals\nexport const addGoal = newGoal => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.post(`${baseURL}/goals/add-goal`, {\n      ...newGoal\n    });\n    dispatch({\n      type: ADD_GOALS,\n      payload: response.data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\nexport const fetchFood = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.get(`${baseURL}/foods`);\n    if (response.data.success) {\n      dispatch({\n        type: LOAD_FOOD,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};\nexport const removeFood = foodId => async dispatch => {\n  try {\n    dispatch({\n      type: LOADING\n    });\n    const response = await axios.delete(`${baseURL}/foods/${foodId}`);\n    if (response.status === 204) {\n      dispatch({\n        type: REMOVE_FOOD,\n        payload: foodId\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR\n    });\n  }\n};","map":{"version":3,"names":["axios","ADD_FOOD","ADD_GOALS","ERROR","EXERCISE_ADDED","EXERCISE_LOAD_SUCCESS","LOADING","LOAD_FOOD","LOAD_GOALS","REMOVE_EXERCISE","REMOVE_FOOD","REMOVE_GOAL","baseURL","process","env","REACT_APP_BASE_URL","fetchData","dispatch","type","response","get","data","success","payload","error","addExercise","newExercise","post","removeExercise","exerciseId","delete","status","addFood","newFood","fetchGoals","removeGoals","goalId","addGoal","newGoal","fetchFood","removeFood","foodId"],"sources":["/Users/nikhil/Desktop/Frontend/fintes R acker/src/redux/action.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_FOOD,\n  ADD_GOALS,\n  ERROR,\n  EXERCISE_ADDED,\n  EXERCISE_LOAD_SUCCESS,\n  LOADING,\n  LOAD_FOOD,\n  LOAD_GOALS,\n  REMOVE_EXERCISE,\n  REMOVE_FOOD,\n  REMOVE_GOAL,\n} from \"../components\";\n\nconst baseURL =\n  process.env.REACT_APP_BASE_URL ||\n  \"https://habit-tracker-backend-kappa.vercel.app/v1/api\";\n\nexport const fetchData = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.get(`${baseURL}/exercises/exercises`);\n\n    if (response.data.success) {\n      dispatch({ type: EXERCISE_LOAD_SUCCESS, payload: response.data.data });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\nexport const addExercise = (newExercise) => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n\n    const response = await axios.post(`${baseURL}/exercises/add-exercise`, {\n      ...newExercise,\n    });\n    if (response.data.success) {\n      dispatch({ type: EXERCISE_ADDED, payload: response.data.data });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\nexport const removeExercise = (exerciseId) => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.delete(`${baseURL}/exercises/${exerciseId}`);\n    if (response.status === 204) {\n      dispatch({ type: REMOVE_EXERCISE, payload: exerciseId });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\n// food actions\n\nexport const addFood = (newFood) => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.post(`${baseURL}/foods/add-food`, {\n      ...newFood,\n    });\n    dispatch({ type: ADD_FOOD, payload: response.data.data });\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\nexport const fetchGoals = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.get(`${baseURL}/goals`);\n\n    if (response.data.success) {\n      dispatch({ type: LOAD_GOALS, payload: response.data.data });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\nexport const removeGoals = (goalId) => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.delete(`${baseURL}/goals/${goalId}`);\n    if (response.status === 204) {\n      dispatch({ type: REMOVE_GOAL, payload: goalId });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\n// goals\nexport const addGoal = (newGoal) => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.post(`${baseURL}/goals/add-goal`, {\n      ...newGoal,\n    });\n    dispatch({ type: ADD_GOALS, payload: response.data.data });\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\nexport const fetchFood = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.get(`${baseURL}/foods`);\n\n    if (response.data.success) {\n      dispatch({ type: LOAD_FOOD, payload: response.data.data });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n\nexport const removeFood = (foodId) => async (dispatch) => {\n  try {\n    dispatch({ type: LOADING });\n    const response = await axios.delete(`${baseURL}/foods/${foodId}`);\n    if (response.status === 204) {\n      dispatch({ type: REMOVE_FOOD, payload: foodId });\n    }\n  } catch (error) {\n    dispatch({ type: ERROR });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}